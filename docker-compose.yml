version: '3.9'

services:
  infohub:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: infohub-api
    ports:
      - "8080:8080"
    environment:
      - CONFIG_PATH=/app/configs/config.docker.yaml
      - LOG_LEVEL=info
      - REDIS_ADDRESS=redis:6379
    volumes:
      - ./configs:/app/configs:ro
      - infohub_cache:/app/cache
    depends_on:
      - redis
      - prometheus
    networks:
      - infohub-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/api/v1/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: infohub-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./deployments/redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - infohub-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Prometheus Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: infohub-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./deployments/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - infohub-network
    restart: unless-stopped

  # Grafana Dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: infohub-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./deployments/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./deployments/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - infohub-network
    restart: unless-stopped
    depends_on:
      - prometheus

  # Mock News Server (for testing)
  mock-server:
    build:
      context: .
      dockerfile: Dockerfile.mock
    container_name: infohub-mock
    ports:
      - "3001:3001"
    networks:
      - infohub-network
    restart: unless-stopped

volumes:
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  infohub_cache:
    driver: local

networks:
  infohub-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
